---
layout: post
title:  "TIL(20240517) JAVA: ; Spring; 코딩테스트: 콜라츠 추측;"
date:  2024-05-17
categories: TIL JAVA Spring 코딩테스트
---

---------------------------------------------------------------------


## 🙌 오늘의 공부목록
- JAVA chapter 9 강의듣기
- JAVA 강의듣고 정리하기

## 🔄 내일의 공부목록

### ✔ 오늘 하루 느낀점

---

# 📌 JAVA    


---------------------------------------------------------------------


# 📌 Spring

# 📌 MySQL



---------------------------------------------------------------------

# 📌 코딩테스트 1: 콜라츠 추측

## 🔒 문제 : 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될 때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.

- 1-1. 입력된 수가 짝수라면 2로 나눕니다. 
- 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 
- 2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다. 예를 들어, 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, solution을 완성해 주세요. 단, 주어진 수가 1인 경우에는 0을, 작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환해 주세요.

## 🚫 조건 : 입력된 수, num은 1 이상 8,000,000 미만인 정수입니다.


# 💡 필요했던 메서드
**없음**

# 🔓 문제풀이
```java
class Solution {
    public int solution(int num) {
        int answer = 0;
        
        while(num!=1) {
            
            if (num % 2 == 0) {
                num = num / 2;
            } else if (num % 2 == 1) {
                num = (num * 3) +1;
            }
            answer++;
            
            if (answer == 500) {
                answer = -1;
                return answer;
             }
        } 
        return answer; 
    }              
}
```

## 🤷‍♀️ 코딩테스트 1 문제풀이를 하면서 느낀점
: 마지막 3번째 테스트에서 통과를 못해서 고민을 많이 했는데,
while의 조건을 answer <=500 으로 잡고 있어서 -1이 반환되야 할 상황에서는
어디서 return문을 넣어야 할지 막막해지면서 조건문이 잘못되었다라는 것을 인지했다.
조건을 num !=1로 바꾸면서 while안의 블록에서 처리해야 할 방법에 대해서 풀렸던 것 같다.
정말 간단한 문제 같은데.. 1시간이 걸렸다.. 후우.. 풀리니까 재밌는 코딩테스트인데..
안풀리면 내가 멍청이 같아보여서 묘한 매력이 있다..😁

## 🎈 코딩테스트 1 다른사람의 풀이! 

```java
class Collatz {
    public int collatz(int num) {
    long n = (long)num;
    for(int i=0; i<500; i++){
        if(n==1) return i; 
      n = (n%2==0) ? n/2 : n*3+1;
    }
        return -1;
    }
```

TMI) 삼항연산자는 정말 쉬운 듯 한데 응용이 안된다.. 하하하하하하핳 🤣
오늘은 과제를 제출해야 하므로 1문제로 족하자..ㅠ_ㅠ...

--------------------------------------------------------------

