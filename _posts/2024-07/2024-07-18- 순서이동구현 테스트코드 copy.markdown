---
layout: post
title:  "TIL(20240718) [카드 순서이동 기능-테스트코드 작성하기]"
date:  2024-07-18
categories: TIL Spring
---

----------------------------------------------------------------------------


1. NoSQL과 RDBMS의 특징과 차이점에 대해서 장, 단점을 들어 설명해주세요.
- RDBMS는 관계형 데이터베이스를 의미하며 종류로는 oracleDB,MySQL,mariaDB 등이 있습니다. RDBMS는 정해진 스키마에 따라 데이터를 저장하여야 하므로 명확한 데이터 구조를 가지고 있기에 데이터 무결성을 보장하고 있습니다. 이러한 특징으로 데이터가 자주 변경이 이루어지는 시스템에 적합하다고 볼 수 있고 테이블과 테이블간의 관계를 맺고 있어 fk외래키를 이용해 join문으로 한 테이블에서 가져오지 못하는 데이터를 가져올 수 있게되는데,  시스템이 커질 경우에는 join문이 많은 복잡한 쿼리가 만들어질 수 있다는 것과 스키마로 인하여 데이터가 유연하지 못하다는 것,스키마 변경이 어렵다는 것이 단점이 될 수 있습니다. NoSQL는 RDBMS와 달리 테이블 간 관계를 정의하지 않기에 join문도 불가능 합니다. 이 말은 즉, 스키마가 없기 때문에 유연하며 자유로운 데이터 구조를 가질 수 있다는 것을 의미하는데(데이터 구조 보장X), 언제든 저장된 데이터를 조정하고 새로운 필드를 추가할 수 있게 됩니다.  하지만 이러한 경우에서 데이터의 중복이 발생할 수 있고, 중복된 데이터가 변경 될 경우 수정을 모든 컬렉션에서 수행을 해야하는 상황이 발생하므로 데이터가 잦은 변경이 이루어지지 않은 시스템이 좋고 수평적 확장이 가능하다는 점에서 빅데이터를 저장해야하는 시스템에 적합하다고 알고 있습니다.

- NoSQL은 관계형 데이터베이스가 아닌 다른 형태의 데이터 저장기술을 의미한다. NoSQL은 테이블간의 관계를 정의하지 않는다. 
(특징)
1) key-value타입 : 대표적으로 redis, dynamo db
2) Document 타입 : key와 document의 형태로 저장 value형태가 document타입으로 저장되는 것인데, 여기서 document 는 객체지향에서의 객체와 유사함(하나의 단위로 저장) : mongoDB
3) wide column 타입 : HBase
4) graph 타입 : 그래프 구로를 사용하여 데이터를 표현하고 저장하는 db , 주로 소셜네트워크에서 많이 사용되며 연관된 데이터를 추천해주는 추천엔진등의 데이터베이스로 적합 : Neo4J 
- RDBMS
(종류) oracle, Mysql, mariaDB
(특징)
1) 모든 데이터를 2차원 테이블로 표현하며
2) 테이블은 Row,Column으로 이루어진 기본데이터 저장단위
3) 상호관련성을 가진 테이블의 집합
4) 확장도 용이하며
5) ER(Entity Relationship) 모델
6) ER모델에 따라 데이터베이스가 만들어진다.
7) R은 관계형을 의미하는데 보통 테이블 하나로 답을 얻을 수 없는 상황에서 이 관계성을 사용해 복잡한 요구를 실현할 수 있다.(외래키fk) SQL은 이 부분을 지원해주며 관계형을 지원하기 위한 트랜잭션 AICD 속성의 개념도 도입되어있음.
8) MS(관리시스템) : insert, select, update, delete할 수 있도록 해주는 소프트웨어 SQL을 지원해준다.

    
2. mvc 패턴에 대해서 설명해주세요.
- MVC패턴은 Model-View-Controller로 이루어진 사용자 인터페이스, 데이터 및 논리 제어를 구현하는데 사용되는 소프트웨어 디자인 패턴입니다. 즉 비지니스 로직과 화면을 구분하는데 중점을 두고 있으며 이러한 구분을 관심사 분리를 통해서 어플리케이션을 낮은 결합도로 모듈화 할 수 있고, 코드의 재사용성과 유지보수 측면에서 용이하다고 볼 수 있습니다. MVC패턴의 3가지 구성요소는 상호작용을 하며 각 요소들은 명확하게 정의된 자신들의 역할을 수행하게 됩니다. 사용자가 view를 통해서 요청하면 view는 컨트롤러에 이러한 사항을 전달합니다. controller는 전달받은 요청을 확인하고 model에게 해당 요청에 대한 처리사항을 전달하여 model는 해당 요청에 대한 데이터의 비지니스 로직을 수행하게 됩니다. 다시 요청된 처리 결과값을 controller에게 다시 전달하고 controller는 이를 받아 view에게 전달하며 view는 해당 결과값을 사용자에게 보여지는 화면을 업데이트 하게 됩니다. 
    
    - 답변
        
        `model` `view` `controller`
        
        모델 
        
        - 컨트롤러가 호출을 하면 DB와 연동하여 사용자의 입출력 데이터를 다루는 일과 같은 데이터와 연관된 비즈니스 로직을 처리하는 역할
        - 데이터 추출, 저장, 삭제, 업데이트 등의 역할을 수행
        
        뷰
        
        - 사용자와 상호작용을 하며 컨트롤러로부터 받은 모델의 결과값을 사용자에게 화면으로 출력
        
        컨트롤러
        
        - Model과 View 사이를 이어주는 인터페이스 역할
        - Model이 데이터를 어떻게 처리할지 알려주는 역할
        
    - 조우석
        
        MVC 패턴은 사용자 인터페이스로부터 비즈니스 로직을 분리하기 위한 소프트웨어 디자인 패턴으로,  애플리케이션의 구성 요소를 Model-View-Controller로 분리하여 개발하는 방법입니다.
        
        따라서 역할 분리로 인해 낮은 결합도로 모듈화할 수 있고, 코드의 재사용성이 높아지며,
        변경이 필요한 부분을 쉽게 파악할 수 있기 때문에 서비스를 유지보수 비용을 줄일 수 있습니다.
        
        Model
        데이터를 관리하는 역할을 합니다. 컨트롤러가 호출을 하면 DB와 연동하여 데이터 검색,  저장, 삭제 업데이트와 같은 비즈니스 로직을 처리하는 역할을 합니다.
        
        View
        view는 사용자 인터페이스로, 컨트롤러가 모델로부터 데이터를 요청하면 뷰는 해당 데이터를 가져와서 사용자에게 화면에 출력합니다.
        
        Controller
        컨트롤러는 독립적인 모델과 뷰 사이를 이어주는 인터페이스 역할을 합니다.
        뷰에서 전달한 이벤트에 따라 모델이 애플리케이션 상태를 관리할 수 있게 해주며,
        모델이 가진 데이터를 뷰에게 전달해서 화면을 만듭니다.
        
        정리하면 모델은 데이터를 처리하고 뷰는 데이터를 사용자에게 제공하며 컨트롤러는 둘 사이의 상호 작용을 관리하여 올바른 데이터를 가져와 적절하게 표시하도록 합니다.
        
        MVC 패턴을 사용하여 관심사 분리로 인해 애플리케이션은 더욱 모듈화되고, 유지 관리 및 확장 가능해집니다.
        
3. RDBMS의 정규화에 대해 설명해주세요.
    - 답변
        
        `중복데이터` `무결성`
        
    - 모범답안
        - 1
        - 2
4. Primary Key, Foreign Key에 대해 설명해주세요.
    - 답변
        
        `1:1` `1:N` `N:M`
        
        PK : `not null` `unique`
        
        FK : `PK 참조`
        
    - 정재현
        
        정규화란 관계형 데이터베이스의 설계에서
        데이터를 중복 없이 효율적으로 저장하기 위한 일련의 과정을 말합니다.
        총 5단계의 과정을 거쳐
        데이터베이스의 구조가 불필요한 중복을 최소화하고 데이터의 일관성과 무결성을 유지할 수 있도록 도와줍니다. 이때 주의할 점이 있는데
        Data의 무결성 보장해주거나 이상현상 등을 막아준다고 하지만 다수의 정규화는 성능 저하를 초래할 수 있습니다.
        
5. HTTP 메서드에 대해 설명해주세요.
    - 답변
        
        주요 메서드 : `GET` `POST` `PUT` `PATCH` `DELETE`
        
        기타 메서드 : `HEAD` `OPTIONS` `CONNECT` `TRACE`
        
    - 권용수
        
        PK 유일한 값으로 공백을 가질 수 없고, 데이터를 식별하기 위한 값이다. 특징으로는 고유성을 가지고, null 값을 허용할 수 없다. unique 제약 조건을 가진다. FK 관계형 데이터베이스의 데이터 관계를 표현하기 위한 키로, 참조되는 테이블의 pk를 fk 라고 한다. fk는 무결성 제약 조건을 가져 참조 무결성을 유지한다, 삭제 및 갱신시 제약 조건을 가진다.
        
6. CORS(Cross Origin Resource Sharing)에 대해 설명해주세요.
    - 답변
        
        `SOP` `CORS 필요 이유` `CORS 정의`
        
    - 조우석
        
        HTTP 메서드에 대해 설명해주세요
        
        HTTP 메서드란 클라이언트와 서버 사이에 이루어지는 요청(Request)과 응답(Response) 데이터를 전송하는 방식입니다.
        HTTP 메서드를 통해 서버가 수행해야할 동작을 지정하면 url은 리소스만 식별하면 되기 때문에 리소스와 동작을 분리할 수 있습니다.
        
        HTTP 메소드의 종류는 총 9가지가 있습니다.
        
        - **GET :** 리소스 조회
                - 주로 검색, 게시판 목록에서 검색어로 이용하며, 정상적인 응답이 완료되면 200 staus 코드를 반환합니다.
                - 동적 데이터 조회 하는 경우 쿼리 파라미터 사용해서 데이터를 전달합니다.
        
        - **POST:**  요청 데이터 처리, 주로 등록 및 생성 요청에 사용하는 메서드 입니다.
                * 메시지 바디(body)를 통해 서버로 요청 데이터 전달하면 서버는 요청 데이터를 처리하여응답시 201 HTTP 응답을 반환합니다.
        
        - **PUT :** 리소스를 수정하는 메서드로 데이터가 존재하면 대체하고 존재하지 않으면 생성합니다.
                - 하지만 일부 리소스만 변경할 경우 기존 데이터가 완전히 대체되어 기존 데이터가 삭제되기 때문에 이때는 PATCH 메소드를 이용해야 합니다.
        
        - **PATCH :** 리소스 일부 부분을 변경하는 메소드 입니다. (PUT이 전체 변경, PATCH는 일부 변경)
        
        - **DELETE :** 리소스 삭제하는 메서드
          
        - **HEAD :** GET과 동일하지만 메시지 부분(body 부분)을 제외하고, 상태 줄과 헤더만 반환
        
        - **OPTIONS :** 예비 요청(Preflight)에 사용되는 HTTP 메소드로 본 요청을 하기 전에 안전한지 미리 검사하는 메서드 입니다.
                - 따라서 서버의 지원 가능한 HTTP 메서드와 출처를 응답 받아 [CORS 정책Visit Website](https://inpa.tistory.com/entry/WEB-%F0%9F%93%9A-CORS-%F0%9F%92%AF-%EC%A0%95%EB%A6%AC-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-%F0%9F%91%8F)을 검사하기 위한 요청입니다.
        
        - **CONNECT :** 대상 자원으로 식별되는 서버에 대한 연결 요청
        
        - **TRACE :** 대상 리소스에 대한 경로를 따라 메시지 루프백 테스트를 수행
                - 서버에 도달 했을 때의 최종 패킷의 요청 패킷 내용을 응답 받을 수 있다.
                - 클라이언트의 요청 패킷이 방화벽, Proxy 서버, Gateway 등을 거치면서 패킷의 변조가 일어날수 있는데, 그래서 TRACE 메서드를 통해 요청했던 패킷 내용과 응답 받은 요청 패킷 내용을 비교하여 변조 유무를 확인 할 수 있다
        
7. 브라우저의 작동방식에 대해서 설명해주세요.
    - 답변
        
        `단계별로 상세한 프로세스를 나눠서 설명`
        
    - 전석배
        
        사용자가 웹 브라우저를 열고 URL을 입력하거나 하이퍼링크를 클릭합니다.
        브라우저는 URL에서 호스트 이름을 추출하고 DNS(Domain Name System) 서버를 통해 해당 호스트의 IP 주소를 가져옵니다.
        브라우저는 서버에 HTTP 요청을 보냅니다. 이 요청에는 메서드(GET, POST 등)와 함께 요청하는 리소스의 경로 등이 포함됩니다.
        서버는 요청을 받고 처리한 후에 HTTP 응답을 생성합니다. 응답에는 상태 코드, 헤더 및 리소스(HTML 문서, 이미지 등)가 포함될 수 있습니다.
        브라우저는 응답을 받아서 렌더링합니다. HTML은 DOM(Document Object Model)으로 파싱되고, CSS는 스타일 규칙에 따라 렌더링되고, JavaScript는 실행됩니다.
        렌더링된 페이지가 사용자에게 표시됩니다. 사용자가 페이지와 상호 작용하면서 브라우저는 추가적인 요청을 생성하고 응답을 처리합니다.
        
8. 쿠키, 세션의 개념과 차이를 설명해보세요
    - 답변
        
         `무상태(stateless)` `이 기술이 왜? 생겨났는지`
        
    - 권용수
        
        # 쿠키와 세션
        
        목적 : 비연결성과 무상태성을 보안하기 위해서 사용한다.
        
        쿠키
        
        - 클라이언트 로컬에 저장되는 키와 값이 들어있는 데이터 이다.
        - 유효기간을 명시할 수 있다.
        - 약 300개 정도 저장할 수 있고, 4KB 정도 까지 저장할 수 있다.
        세션
        - 쿠키에 기반히지만 세션은 서버측에서 관리한다.
        - 서버에서는 클라이언트의 정보를 저장하고 구분하기 위해서 세션 키를 발급하고, 서버 저장소에서 Map의 형태로 관리한다.
        - 클라이언트와의 연결이 종료되는 시점까지 저장한다. 요청이 일정 시간동안 없다면 제거한다.
        - 서버에 저장되다 보니 서버에 부하를 줄 수 있다.
        
        둘의 공통은 쿠키를 기반한다는 것이고, 차이점은 저장되는 위치에 있다.
        
9. TCP/UDP에 대해서 설명해주세요.
    - 답변
        
        `TCP와 UDP의 신뢰성 차이가 어떤 프로세스 떄문에 발생하는지`  `3-way handshaking`
        
    - 송선호
        
        TCP와 UDP는 웹 상에서 데이터를 전송하기 위한 통신규약입니다.
        
        Transmission Control Protocol
        
        인터넷 상에서 데이터를 메세지의 형태로 보내기 위해 사용하는 프로토콜입니다. 3 way handshaking과정을 통해 연결을 설정하며 데이터가 온전하게 도착하도록 보장하기 때문에 신뢰성이 높은 프로토콜입니다.
        
        User Datagram Protocol
        
        UDP는 사용자 데이터그램 프로토콜의 약자이며 비연결 지향적 프로토콜입니다.  TCP와 다르게 사전연결을 하지않아 데이터는 소실될 가능성이 존재하고 순서를 보장하지 않으며 데이터를 보증하지 않지 빠르다는 장점이 존재합니다.
        
10. http, https 차이점에 대해 설명해주세요
    - 답변
        
        `HTTP/HTTPS의 정의와 차이점` `SSL 인증서를 통해서 데이터 조작여부 판단`
        
    - 유선아
        
        HTTP와 HTTPS는 인터넷을(네트워크) 통해 데이터를 전송하는 데 사용되는 두 가지 프로토콜입니다.
        
        HTTP는 HyperText Transfer Protocol의 약자로, 웹 브라우저와 웹 서버 사이에서 웹 페이지를 전송하는 데 사용 되는 통신 프로토콜입니다.
        하지만 HTTP는 기본적으로 평문으로 데이터를 전송하기 때문에 데이터가 암호화되지 않고 누구나 읽을 수 있어서, 보안에 취약합니다.
        이러한 특징 때문에 보안이 필요하지 않은 정적인 웹 페이지를 전송하는 데 적합합니다.
        
        HTTPS(Hypertext Transfer Protocol Secure)는 HTTP의 보안 버전으로 보안측면에서 더욱 강화된 프로토콜입니다.
        
        HTTPS는 SSL(Secure Socket Layer) 또는 TLS ( Transport Layer Security)프로토콜을 사용해서 데이터를 암호화해서 전송합니다.
        이렇게 하면 전송되는 데이터가 보호되어서 중간에서 데이터를 엿보거나 조작하는 것을 방지할 수 있습니다.
        
        즉, HTTP는 평문으로 데이터를 전송하는 프로토콜로 보안이 필요하지 않은 경우에 사용 되고,
        HTTPS는 데이터를 암호화하여 안전하게 전송하는 프로토콜로 보안이 필요한 웹 사이트에서 사용됩니다.
        
        HTTP와 HTTPS. 두 프로토콜의 큰 차이점은 SSL/TLS를 사용하는지 여부입니다.
        즉, HTTPS는 SSL/TLS를 통해 데이터를 암호화하지만, HTTP는 데이터를 평문으로 전송합니다.
        
11. DI, IoC에 대해 설명해주세요. 

        
12. 객체지향 프로그래밍이란 무엇이고 어떻게 활용할 수 있나요?

        
13. 대용량 트래픽 발생 시 어떻게 대응해야 하나요?

14. ORM을 사용하면서 쿼리가 복잡해지는 경우에는 어떻게 해결하는게 좋을까요?
 
15. GET, POST의 개념과 함께 데이터 흐름에 대해서 설명해주세요.

16. OSI 7계층에 대해 아는대로 설명해주세요.

17. 세션 기반 인증과 토큰 기반 인증의 차이에 대해 설명해주세요.

18. JWT, Refresh, Access Token에 대해서 설명해주세요.

19. OAuth에 대해서 설명해주세요.

20. 클래스형과 함수형의 차이를 설명해주세요. 어떤 방식을 주로 사용하였고 그 이유가 뭔지 답변해주세요.

21. CI/CD에 대해서 설명해주세요.
  
22. TDD에 대해서 설명해주세요.
  
23. 프로세스와 쓰레드에 대해서 설명하고 그 차이에 대해서 설명해주세요.

24. 멀티프로세스와 멀티쓰레드의 특징에 대해 설명해주세요.
  
25. 쿼리 최적화에 대해 설명해주시고 방법에 대해 설명해주세요.

26. DB 로직 최소화를 하려면 어떻게 해야 할까요?

27. 테스트코드에 대해서 아는대로 설명해주시고 활용 경험에 대해서 답변해주세요.

28. Array, LinkedList에 대해 설명해주시고 각각 어떻게 사용하는지 말씀해주세요.

29. AWS S3, EC2를 사용하는 이유와 사용 경험에 대해서 답변해주세요.

30. 정렬 알고리즘에 대해서 아는대로 설명해주세요.