---
layout: post
title:  "TIL(20240722) [Http메서드]"
date:  2024-07-22
categories: TIL 
---

----------------------------------------------------------------------------

5. HTTP 메서드에 대해 설명해주세요.
- http메서드는 서버 구조에서 요청,응답이 이루어지는 방식을 의미하며, http메서드를 사용하는 이유는 리소스와 동작을 분리하기 위함이며 http메서드를 통해 서버가 수행해야 할 동작을 지정하면, url은 리소스만 식별하면 되기 때문입니다. http 메서드의 종류 중 주요 메서드들을 먼저 알아보자면
- GET메서드는 리소스를 조회하는 메서드이며, 해당 메서드는 멱등성이라는 개념을 지니고 있어, 여러번 조회 요청을 하여도 리소스는 변하지 않습니다. (멱등성O)
- POST메서드는 새로운 리소스를 생성하는데 사용합니다. 성공적으로 완료되면 201 http응답을 반환합니다. (멱등성X)
- PUT메서드는 부분수정이 아닌 리소스를 완전히 대체하는 개념(덮어쓰기)으로 클라이언트가 구체적인 리소스 위치를 아는 상태에서 URL를 지정합니다.(멱등성O)
- PATCH 메서드는 PUT과 같이 리소스를 수정하는 역할을 하지만 리소스를 부분 변경한다는 점에서 차이점이 있습니다.  (멱등성X)
- DELETE 메서드는 리소스를 제거하는 역할

        
6. CORS(Cross Origin Resource Sharing)에 대해 설명해주세요.
    - 답변
        
        `SOP` `CORS 필요 이유` `CORS 정의`
        
    - 조우석
        
        HTTP 메서드에 대해 설명해주세요
        
        HTTP 메서드란 클라이언트와 서버 사이에 이루어지는 요청(Request)과 응답(Response) 데이터를 전송하는 방식입니다.
        HTTP 메서드를 통해 서버가 수행해야할 동작을 지정하면 url은 리소스만 식별하면 되기 때문에 리소스와 동작을 분리할 수 있습니다.
        
        HTTP 메소드의 종류는 총 9가지가 있습니다.
        
        - **GET :** 리소스 조회
                - 주로 검색, 게시판 목록에서 검색어로 이용하며, 정상적인 응답이 완료되면 200 staus 코드를 반환합니다.
                - 동적 데이터 조회 하는 경우 쿼리 파라미터 사용해서 데이터를 전달합니다.
        
        - **POST:**  요청 데이터 처리, 주로 등록 및 생성 요청에 사용하는 메서드 입니다.
                * 메시지 바디(body)를 통해 서버로 요청 데이터 전달하면 서버는 요청 데이터를 처리하여응답시 201 HTTP 응답을 반환합니다.
        
        - **PUT :** 리소스를 수정하는 메서드로 데이터가 존재하면 대체하고 존재하지 않으면 생성합니다.
                - 하지만 일부 리소스만 변경할 경우 기존 데이터가 완전히 대체되어 기존 데이터가 삭제되기 때문에 이때는 PATCH 메소드를 이용해야 합니다.
        
        - **PATCH :** 리소스 일부 부분을 변경하는 메소드 입니다. (PUT이 전체 변경, PATCH는 일부 변경)
        
        - **DELETE :** 리소스 삭제하는 메서드
          
        - **HEAD :** GET과 동일하지만 메시지 부분(body 부분)을 제외하고, 상태 줄과 헤더만 반환
        
        - **OPTIONS :** 예비 요청(Preflight)에 사용되는 HTTP 메소드로 본 요청을 하기 전에 안전한지 미리 검사하는 메서드 입니다.
                - 따라서 서버의 지원 가능한 HTTP 메서드와 출처를 응답 받아 [CORS 정책Visit Website](https://inpa.tistory.com/entry/WEB-%F0%9F%93%9A-CORS-%F0%9F%92%AF-%EC%A0%95%EB%A6%AC-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-%F0%9F%91%8F)을 검사하기 위한 요청입니다.
        
        - **CONNECT :** 대상 자원으로 식별되는 서버에 대한 연결 요청
        
        - **TRACE :** 대상 리소스에 대한 경로를 따라 메시지 루프백 테스트를 수행
                - 서버에 도달 했을 때의 최종 패킷의 요청 패킷 내용을 응답 받을 수 있다.
                - 클라이언트의 요청 패킷이 방화벽, Proxy 서버, Gateway 등을 거치면서 패킷의 변조가 일어날수 있는데, 그래서 TRACE 메서드를 통해 요청했던 패킷 내용과 응답 받은 요청 패킷 내용을 비교하여 변조 유무를 확인 할 수 있다
        
7. 브라우저의 작동방식에 대해서 설명해주세요.
    - 답변
        
        `단계별로 상세한 프로세스를 나눠서 설명`
        
    - 전석배
        
        사용자가 웹 브라우저를 열고 URL을 입력하거나 하이퍼링크를 클릭합니다.
        브라우저는 URL에서 호스트 이름을 추출하고 DNS(Domain Name System) 서버를 통해 해당 호스트의 IP 주소를 가져옵니다.
        브라우저는 서버에 HTTP 요청을 보냅니다. 이 요청에는 메서드(GET, POST 등)와 함께 요청하는 리소스의 경로 등이 포함됩니다.
        서버는 요청을 받고 처리한 후에 HTTP 응답을 생성합니다. 응답에는 상태 코드, 헤더 및 리소스(HTML 문서, 이미지 등)가 포함될 수 있습니다.
        브라우저는 응답을 받아서 렌더링합니다. HTML은 DOM(Document Object Model)으로 파싱되고, CSS는 스타일 규칙에 따라 렌더링되고, JavaScript는 실행됩니다.
        렌더링된 페이지가 사용자에게 표시됩니다. 사용자가 페이지와 상호 작용하면서 브라우저는 추가적인 요청을 생성하고 응답을 처리합니다.
        
8. 쿠키, 세션의 개념과 차이를 설명해보세요
    - 답변
        
         `무상태(stateless)` `이 기술이 왜? 생겨났는지`
        
    - 권용수
        
        # 쿠키와 세션
        
        목적 : 비연결성과 무상태성을 보안하기 위해서 사용한다.
        
        쿠키
        
        - 클라이언트 로컬에 저장되는 키와 값이 들어있는 데이터 이다.
        - 유효기간을 명시할 수 있다.
        - 약 300개 정도 저장할 수 있고, 4KB 정도 까지 저장할 수 있다.
        세션
        - 쿠키에 기반히지만 세션은 서버측에서 관리한다.
        - 서버에서는 클라이언트의 정보를 저장하고 구분하기 위해서 세션 키를 발급하고, 서버 저장소에서 Map의 형태로 관리한다.
        - 클라이언트와의 연결이 종료되는 시점까지 저장한다. 요청이 일정 시간동안 없다면 제거한다.
        - 서버에 저장되다 보니 서버에 부하를 줄 수 있다.
        
        둘의 공통은 쿠키를 기반한다는 것이고, 차이점은 저장되는 위치에 있다.
        
9. TCP/UDP에 대해서 설명해주세요.
    - 답변
        
        `TCP와 UDP의 신뢰성 차이가 어떤 프로세스 떄문에 발생하는지`  `3-way handshaking`
        
    - 송선호
        
        TCP와 UDP는 웹 상에서 데이터를 전송하기 위한 통신규약입니다.
        
        Transmission Control Protocol
        
        인터넷 상에서 데이터를 메세지의 형태로 보내기 위해 사용하는 프로토콜입니다. 3 way handshaking과정을 통해 연결을 설정하며 데이터가 온전하게 도착하도록 보장하기 때문에 신뢰성이 높은 프로토콜입니다.
        
        User Datagram Protocol
        
        UDP는 사용자 데이터그램 프로토콜의 약자이며 비연결 지향적 프로토콜입니다.  TCP와 다르게 사전연결을 하지않아 데이터는 소실될 가능성이 존재하고 순서를 보장하지 않으며 데이터를 보증하지 않지 빠르다는 장점이 존재합니다.
        
10. http, https 차이점에 대해 설명해주세요
    - 답변
        
        `HTTP/HTTPS의 정의와 차이점` `SSL 인증서를 통해서 데이터 조작여부 판단`
        
    - 유선아
        
        HTTP와 HTTPS는 인터넷을(네트워크) 통해 데이터를 전송하는 데 사용되는 두 가지 프로토콜입니다.
        
        HTTP는 HyperText Transfer Protocol의 약자로, 웹 브라우저와 웹 서버 사이에서 웹 페이지를 전송하는 데 사용 되는 통신 프로토콜입니다.
        하지만 HTTP는 기본적으로 평문으로 데이터를 전송하기 때문에 데이터가 암호화되지 않고 누구나 읽을 수 있어서, 보안에 취약합니다.
        이러한 특징 때문에 보안이 필요하지 않은 정적인 웹 페이지를 전송하는 데 적합합니다.
        
        HTTPS(Hypertext Transfer Protocol Secure)는 HTTP의 보안 버전으로 보안측면에서 더욱 강화된 프로토콜입니다.
        
        HTTPS는 SSL(Secure Socket Layer) 또는 TLS ( Transport Layer Security)프로토콜을 사용해서 데이터를 암호화해서 전송합니다.
        이렇게 하면 전송되는 데이터가 보호되어서 중간에서 데이터를 엿보거나 조작하는 것을 방지할 수 있습니다.
        
        즉, HTTP는 평문으로 데이터를 전송하는 프로토콜로 보안이 필요하지 않은 경우에 사용 되고,
        HTTPS는 데이터를 암호화하여 안전하게 전송하는 프로토콜로 보안이 필요한 웹 사이트에서 사용됩니다.
        
        HTTP와 HTTPS. 두 프로토콜의 큰 차이점은 SSL/TLS를 사용하는지 여부입니다.
        즉, HTTPS는 SSL/TLS를 통해 데이터를 암호화하지만, HTTP는 데이터를 평문으로 전송합니다.
        
11. DI, IoC에 대해 설명해주세요. 

        
12. 객체지향 프로그래밍이란 무엇이고 어떻게 활용할 수 있나요?

        
13. 대용량 트래픽 발생 시 어떻게 대응해야 하나요?

14. ORM을 사용하면서 쿼리가 복잡해지는 경우에는 어떻게 해결하는게 좋을까요?
 
15. GET, POST의 개념과 함께 데이터 흐름에 대해서 설명해주세요.

16. OSI 7계층에 대해 아는대로 설명해주세요.

17. 세션 기반 인증과 토큰 기반 인증의 차이에 대해 설명해주세요.

18. JWT, Refresh, Access Token에 대해서 설명해주세요.

19. OAuth에 대해서 설명해주세요.

20. 클래스형과 함수형의 차이를 설명해주세요. 어떤 방식을 주로 사용하였고 그 이유가 뭔지 답변해주세요.

21. CI/CD에 대해서 설명해주세요.
  
22. TDD에 대해서 설명해주세요.
  
23. 프로세스와 쓰레드에 대해서 설명하고 그 차이에 대해서 설명해주세요.

24. 멀티프로세스와 멀티쓰레드의 특징에 대해 설명해주세요.
  
25. 쿼리 최적화에 대해 설명해주시고 방법에 대해 설명해주세요.

26. DB 로직 최소화를 하려면 어떻게 해야 할까요?

27. 테스트코드에 대해서 아는대로 설명해주시고 활용 경험에 대해서 답변해주세요.

28. Array, LinkedList에 대해 설명해주시고 각각 어떻게 사용하는지 말씀해주세요.

29. AWS S3, EC2를 사용하는 이유와 사용 경험에 대해서 답변해주세요.

30. 정렬 알고리즘에 대해서 아는대로 설명해주세요.
